<?php

/*
input filter to change links during node save. uses the url shortner api https://accounts.skimlinks.com/shorturl

settings: subdomain redirection (cname check? link to https://accounts.skimlinks.com/customdomain), rss feed modification, 
*/


/**
 * Implements hook_menu().
 */
function skimlinks_menu() {
  $items['admin/config/system/skimlinks'] = array(
    'title' => 'Skimlinks',
    'description' => 'Enabling affiliate marketing using the Skimlinks API service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('skimlinks_admin_settings_form'),
    'access arguments' => array('administer skimlinks'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'skimlinks.admin.inc',
  );

  return $items;
}


/**
 * Implements hook_permission().
 */
function skimlinks_permission() {
  return array(
    'administer skimlinks' => array(
      'title' => t('Administer Skimlinks'),
      'description' => t('Perform maintenance tasks for Skimlinks.'),
    )
  );
}


/**
 * Implements hook_page_alter() to insert JavaScript to the appropriate scope/region of the page.
 */
function skimlinks_page_alter(&$page) {
  global $user;

  if ($id = variable_get('skimlinks_publisherid', false)) {
    drupal_add_js("http://s.skimresources.com/js/{$id}.skimlinks.js", array('type' => 'external', 'scope' => 'footer', 'group' => JS_DEFAULT));
  }
}


function skimlinks_block_info() {
  return array(
    'disclosurebadge' => array(
      'info' => t('A user selectable Skimlinks usage disclosure badge.'),
      'cache' => DRUPAL_CACHE_GLOBAL,
    )
  );
}


function skimlinks_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case 'disclosurebadge':
      $block = array(
        'subject' => '',
        'content' => 'skim my' //!@todo populate content
      );
      break;
  }

  return $block;
}


/**
 * Implements hook_block_configure().
 */
function skimlinks_block_configure($delta = '') {
  $form = array();

  switch($delta) {
    case 'disclosurebadge':
      $form['skimlinks_disclosurebadge'] = array(
        '#type' => 'select',
        '#title' => t('Style of disclosure badge'),
        '#default_value' => variable_get('skimlinks_disclosurebadge', 1),
        '#options' => array('1' => t('Style 1')),
      );
    break;
  }

  return $form;
}


/**
 * Implements hook_block_save().
 */
function skimlinks_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'disclosurebadge':
      variable_set('skimlinks_disclosurebadge', (int) $edit['skimlinks_disclosurebadge']);
      break;
  }
}