<?php

/**
 * @file
 * Install, requirements, and uninstall functionsfor the Skimlinks
 * module.
 */

/**
 * Implements hook_schema().
 */
function skimlinks_schema() {
  $schema = array();

  $tables = array(
    'skimlinks_whitelist',
    'skimlinks_blacklist'
  );

  foreach ($tables as $name) {
    $schema[$name] = array(
      'description' => 'Stores skimlinks domains.',
      'fields' => array(
        'domain' => array(
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'description' => 'The domain name',
        ),
        'last_updated' => array(
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
          'description' => 'Timestamp for last update',
        ),
      ),
      'primary key' => array('domain'),
    );
  }

  return $schema;
}

/**
 * Implements hook_install().
 *
 * Prompt user to configure the module on install.
 */
function skimlinks_install() {
	$config_link = l(t('Please configure the Skimlinks module.'), 'admin/config/services/skimlinks');
  drupal_set_message($config_link);
}

/**
 * Implements hook_requirements().
 */
function skimlinks_requirements($phase) {
	$requirements = [];

  if ($phase == 'runtime') {
    // Raise warning if SiteID has not been set yet.
    $publisher_id = variable_get('skimlinks_publisherid', '');
    if (empty($publisher_id)) {
      $requirements['skimlinks_publisherid'] = [
        'title' => t('Skimlinks module'),
        'description' => t(
        	'Skimlinks module has not been configured yet. Please configure its settings from the !config.',
        	array('!config' => l(t('Skimlinks settings page'), 'admin/config/services/skimlinks'))
        ),
        'severity' => REQUIREMENT_WARNING,
        'value' => t('Not configured'),
      ];
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function skimlinks_uninstall() {
  variable_del('skimlinks_displays');
  variable_del('skimlinks_publisherid');
  variable_del('skimlinks_subdomain');
  variable_del('skimlinks_disclosurebadge');
  variable_del('filter_skimlink_host');
  variable_del('skimlinks_environment');
  variable_del('skimlinks_link_new_window');
  variable_del('skimlinks_merchant_api_endpoint');
  variable_del('skimlinks_merchant_api_key');
  variable_del('skimlinks_merchant_api_account_type');
  variable_del('skimlinks_merchant_api_account_id');
  variable_del('skimlinks_update_whitelist_entity_update');
  drupal_clear_js_cache();
}

/**
 * Create whitelist and blacklist tables.
 */
function skimlinks_update_7001() {
  if (db_table_exists('skimlinks_whitelist') == FALSE) {
    drupal_install_schema('skimlinks');
  }
}
